<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
    <constant name="struts.devMode" value="true"/>
    <constant name="struts.locale" value="zh_CN"/>
    <constant name="struts.i18n.encoding" value="GB2312"/>
    <!--过滤websocket连接。-->
    <constant name="struts.action.excludePattern" value="/notification/.*"/>

    <package name="default" extends="struts-default" namespace="/">
        <!--设置默认的action，当前包中的action均不满足时，使用此action作为默认跳转的压面-->
        <default-action-ref name="index"/>
        <action name="index" class="com.rengu.actions.DefaultAction">
            <result>MainPage.html</result>
        </action>
    </package>

    <!--订单信息接口-->
    <package name="Orders" namespace="/orders" extends="struts-default">
        <action name="getAllOrders" class="com.rengu.actions.OrdersAction" method="getAllOrders"/>
        <action name="findAllById" class="com.rengu.actions.OrdersAction" method="findAllById"/>
        <action name="save" class="com.rengu.actions.OrdersAction" method="save"/>
        <action name="delete" class="com.rengu.actions.OrdersAction" method="delete"/>
        <action name="update" class="com.rengu.actions.OrdersAction" method="update"/>
        <action name="findAllByisFinishedAndDate" class="com.rengu.actions.OrdersAction"
                method="findAllByisFinishedAndDate"/>
        <action name="findByState" class="com.rengu.actions.OrdersAction"
                method="findByState"/>
        <action name="deleteById" class="com.rengu.actions.OrdersAction" method="deleteById"/>
    </package>

    <!--工序资源信息接口-->
    <package name="Assisantprocess" namespace="/assisantprocess" extends="struts-default">
        <action name="getAllAssisantProcess" class="com.rengu.actions.AssisantprocessAction"
                method="getAllAssisantProcess"/>
        <action name="save" class="com.rengu.actions.AssisantprocessAction" method="save"/>
        <action name="delete" class="com.rengu.actions.AssisantprocessAction" method="delete"/>
        <action name="update" class="com.rengu.actions.AssisantprocessAction" method="update"/>
        <action name="findAll" class="com.rengu.actions.AssisantprocessAction" method="findAll"/>
        <action name="findAllById" class="com.rengu.actions.AssisantprocessAction" method="findAllById"/>
    </package>

    <!--资源信息接口-->
    <package name="Resource" namespace="/resource" extends="struts-default">
        <action name="getAllResource" class="com.rengu.actions.ResourceAction" method="getAllResource"/>
        <action name="save" class="com.rengu.actions.ResourceAction" method="save"/>
        <action name="delete" class="com.rengu.actions.ResourceAction" method="delete"/>
        <action name="update" class="com.rengu.actions.ResourceAction" method="update"/>
        <action name="findAll" class="com.rengu.actions.ResourceAction" method="findAll"/>
        <action name="findAllById" class="com.rengu.actions.ResourceAction" method="findAllById"/>
    </package>

    <!--资源类型信息接口-->
    <package name="Typerescource" namespace="/typerescource" extends="struts-default">
        <action name="getAllTypeRescource" class="com.rengu.actions.TyperescourceAction" method="getAllTypeRescource"/>
        <action name="save" class="com.rengu.actions.TyperescourceAction" method="save"/>
        <action name="delete" class="com.rengu.actions.TyperescourceAction" method="delete"/>
        <action name="update" class="com.rengu.actions.TyperescourceAction" method="update"/>
        <action name="findAll" class="com.rengu.actions.TyperescourceAction" method="findAll"/>
        <action name="findAllById" class="com.rengu.actions.TyperescourceAction" method="findAllById"/>
    </package>

    <!--资源工组信息接口-->
    <package name="GroupResource" namespace="/groupresource" extends="struts-default">
        <action name="getAllGroupResource" class="com.rengu.actions.GroupResourceAction" method="getAllGroupResource"/>
        <action name="save" class="com.rengu.actions.GroupResourceAction" method="save"/>
        <action name="delete" class="com.rengu.actions.GroupResourceAction" method="delete"/>
        <action name="update" class="com.rengu.actions.GroupResourceAction" method="update"/>
        <action name="findAll" class="com.rengu.actions.GroupResourceAction" method="findAll"/>
        <action name="findAllById" class="com.rengu.actions.GroupResourceAction" method="findAllById"/>
    </package>

    <!--资源工位信息接口-->
    <package name="Site" namespace="/site" extends="struts-default">
        <action name="getAllSite" class="com.rengu.actions.SiteAction" method="getAllSite"/>
        <action name="save" class="com.rengu.actions.SiteAction" method="save"/>
        <action name="delete" class="com.rengu.actions.SiteAction" method="delete"/>
        <action name="update" class="com.rengu.actions.SiteAction" method="update"/>
        <action name="findAll" class="com.rengu.actions.SiteAction" method="findAll"/>
        <action name="findAllById" class="com.rengu.actions.SiteAction" method="findAllById"/>
    </package>

    <!--资源班次信息接口-->
    <package name="Shift" namespace="/shift" extends="struts-default">
        <action name="getAllShift" class="com.rengu.actions.ShiftAction" method="getAllShift"/>
        <action name="save" class="com.rengu.actions.ShiftAction" method="save"/>
        <action name="delete" class="com.rengu.actions.ShiftAction" method="delete"/>
        <action name="update" class="com.rengu.actions.ShiftAction" method="update"/>
        <action name="findAll" class="com.rengu.actions.ShiftAction" method="findAll"/>
        <action name="findAllById" class="com.rengu.actions.ShiftAction" method="findAllById"/>
        <action name="saveAPS" class="com.rengu.actions.ShiftAction" method="saveAPS"/>
    </package>

    <!--计划排程接口-->
    <package name="schedule" extends="struts-default" namespace="/schedule">
        <action name="beginSchedule" class="com.rengu.actions.ScheduleAction" method="beginSchedule"/>
        <action name="getAllSchedules" class="com.rengu.actions.ScheduleAction" method="getAllSchedules"/>
        <action name="delete" class="com.rengu.actions.ScheduleAction" method="delete"/>
        <action name="autoRollingScheduling" class="com.rengu.actions.AutoRollingSchedulingAction"
                method="autoRollingScheduling"/>
    </package>

    <!--工序信息接口-->
    <package name="Process" namespace="/process" extends="struts-default">
        <action name="save" class="com.rengu.actions.ProcessAction" method="save"/>
        <action name="delete" class="com.rengu.actions.ProcessAction" method="delete"/>
        <action name="update" class="com.rengu.actions.ProcessAction" method="update"/>
        <action name="getAllByIsRootNode" class="com.rengu.actions.ProcessAction" method="getAllByIsRootNode"/>
        <action name="getAllById" class="com.rengu.actions.ProcessAction" method="getAllById"/>
    </package>

    <!--布局信息-->
    <package name="Layout" namespace="/layout" extends="struts-default">
        <action name="get3DLayout" class="com.rengu.actions.LayoutAction" method="query3DLayout"/>
    </package>
    <!--产品信息-->
    <package name="product" namespace="/product" extends="struts-default">
        <action name="getAllProduct" class="com.rengu.actions.ProductAction" method="getAllProduct"/>
    </package>

    <!--3D车间访问接口-->
    <package name="State3D" namespace="/3d" extends="struts-default">
        <!--状态查询-->
        <action name="query3DState" class="com.rengu.actions.d3.State3DAction" method="queryState"/>
        <action name="config3D" class="com.rengu.actions.d3.State3DAction" method="config3DLayout"/>
        <action name="set3DLayout" class="com.rengu.actions.d3.State3DAction" method="insertOrUpdateLayout"/>
        <action name="get3DLayout" class="com.rengu.actions.d3.State3DAction" method="query3DLayout"/>
        <action name="updateDevice" class="com.rengu.actions.d3.State3DAction" method="updateDeviceState"/>

        <!--工厂布局-->
        <action name="getAllFactoryLayouts" class="com.rengu.actions.LayoutAction" method="getAllFactoryLayouts"/>
        <action name="findAllById" class="com.rengu.actions.LayoutDetailAction" method="findAllById"/>

        <!--设备报表-->
        <action name="get3DReport" class="com.rengu.actions.d3.Report3DAction" method="resport3d"/>

        <!--仿真或实时数据驱动-->
        <action name="drive3DEmulateFlow" class="com.rengu.actions.d3.Emulate3DAction" method="getEmulateFlow"/>
        <action name="drive3DEmulateFlowAllOrder" class="com.rengu.actions.d3.Emulate3DAction"
                method="getAllOrderEmulateFlow"/>
        <action name="drive3DRealFlow" class="com.rengu.actions.d3.Emulate3DAction" method="getRealFlow"/>
    </package>

    <!--APS接口-->
    <package name="APS" namespace="/aps" extends="struts-default">
        <!--状态查询-->
        <action name="interactiveAps" class="com.rengu.actions.aps.FeedBackStateAction" method="interactiveAps"/>
        <action name="backupSnapshot" class="com.rengu.actions.aps.FeedBackStateAction" method="backupSnapshot"/>
        <action name="recoverSnapshot" class="com.rengu.actions.aps.FeedBackStateAction" method="recoverSnapshot"/>
        <action name="dispatchOrder" class="com.rengu.actions.aps.FeedBackStateAction" method="dispatchOrder"/>
        <action name="updateProgress" class="com.rengu.actions.aps.FeedBackStateAction" method="recvApsResult"/>

        <action name="updateApsState" class="com.rengu.actions.aps.FeedBackStateAction" method="recvInterApsState"/>
        <action name="apsState" class="com.rengu.actions.aps.FeedBackStateAction" method="queryApsState"/>
        <action name="scheduleDetail" class="com.rengu.actions.aps.FeedBackStateAction" method="queryScheduleInfo"/>
        <action name="emulateApsInterResult" class="com.rengu.actions.aps.FeedBackStateAction"
                method="emulateApsInterResult"/>
        <action name="recoverInterX" class="com.rengu.actions.aps.FeedBackStateAction" method="recoverInterX"/>
        <action name="deleteOrder" class="com.rengu.actions.aps.FeedBackStateAction" method="deleteOrder"/>

        <action name="switchAPSModel" class="com.rengu.actions.aps.SwitchAPSAction" method="switchAPSModel"/>
    </package>

    <!--异常处理-->
    <package name="ExceptionHandling" namespace="/exceptionHandling" extends="struts-default">
        <action name="deviceProcessHandling" class="com.rengu.actions.aps.ErrorProcessAction"
                method="processDeviceError"/>
        <action name="orderExceptionHandling" class="com.rengu.actions.aps.ErrorProcessAction"
                method="processOrderError"/>
        <action name="processExceptionHandling" class="com.rengu.actions.aps.ErrorProcessAction"
                method="processProcessError"/>
    </package>

    <!--异常模拟-->
    <package name="ExceptionSimulat" namespace="/ExceptionSimulat" extends="struts-default">
        <action name="creatOrderException" class="com.rengu.actions.AdjustOrderAction" method="creatOrderException"/>
        <action name="creatProcessException" class="com.rengu.actions.AdjustProcessAction"
                method="creatProcessException"/>
    </package>

    <!--高级调整分析-->
    <package name="ExceptionList" namespace="/ExceptionList" extends="struts-default">
        <action name="getAllAdjustOrderException" class="com.rengu.actions.AdjustOrderAction"
                method="getAllAdjustOrderException"/>
        <action name="getAllAdjustProcessException" class="com.rengu.actions.AdjustProcessAction"
                method="getAllAdjustProcessException"/>
        <action name="getAllAdjustDeviceException" class="com.rengu.actions.AdjustDeviceAction"
                method="getAllAdjustDeviceException"/>
        <action name="getAllAdjustLayoutException" class="com.rengu.actions.AdjustLayoutAction"
                method="getAllAdjustLayoutException"/>
        <action name="getAllAdjustOrderByAdjustOrderType" class="com.rengu.actions.AdjustOrderAction"
                method="getAllAdjustOrderByAdjustOrderType"/>
    </package>

    <!--FullCalendar事件源-->
    <package name="FullCalendar" namespace="/FullCalendar" extends="struts-default">
        <action name="getAllFullCalendarEvents" class="com.rengu.actions.FullCalendarAction"
                method="getAllByisFinishedAndDate"/>
        <action name="getLastScheduleInfo" class="com.rengu.actions.FullCalendarAction"
                method="getLastScheduleInfo"/>
    </package>

    <!--快照树-->
    <package name="SnapshotManager" namespace="/snapshot" extends="struts-default">
        <action name="view3DEmulate" class="com.rengu.actions.SnapshotAction" method="viewCurrentSnapshotEmulateData"/>
        <action name="dispatcherResultToMess" class="com.rengu.actions.SnapshotAction" method="dispatcherResultToMess"/>
        <action name="getAllByLevel" class="com.rengu.actions.SnapshotAction" method="getAllByLevel"/>
        <action name="getAllById" class="com.rengu.actions.SnapshotAction" method="getAllById"/>
        <action name="recoverSnapshot" class="com.rengu.actions.SnapshotAction" method="recoverSnapshot"/>
        <action name="queryRecoverSnapshot" class="com.rengu.actions.SnapshotAction" method="queryRecoverSnapshot"/>
    </package>

    <!--plan表-->
    <package name="Plan" namespace="/plan" extends="struts-default">
        <action name="getAllPlanBySnapshotId" class="com.rengu.actions.PlanAction" method="getAllPlanBySnapshotId"/>
        <action name="getAllResultBySnapshotId" class="com.rengu.actions.PlanAction" method="getAllResultBySnapshotId"/>
        <action name="fingRateById" class="com.rengu.actions.PlanAction" method="fingRateById"/>
    </package>
    <!--测试接口-->
    <package name="test" namespace="/test" extends="struts-default">
        <action name="webSocketNotificationTest" class="com.rengu.actions.TestFunc" method="webSocketNotificationTest"/>
    </package>
    <!--MainPage接口-->
    <package name="mainpage" namespace="/mainpage" extends="struts-default">
        <action name="getAllExcepitonNumInfo" class="com.rengu.actions.MainPageAction" method="getAllExcepitonNumInfo"/>
        <action name="getProjectName" class="com.rengu.actions.MainPageAction" method="getProjectName"></action>
    </package>
    <!--EventLog接口-->
    <package name="eventlog" namespace="/eventlog" extends="struts-default">
        <action name="getAllEventLog" class="com.rengu.actions.EventLogAction" method="getAllEventLog"/>
        <action name="save" class="com.rengu.actions.EventLogAction" method="save"/>
    </package>

    <!--订单监控-->
    <package name="Online" namespace="/online" extends="struts-default">
        <action name="findByState" class="com.rengu.actions.OrdersAction" method="findByState"/>
    </package>

    <!-- MES接口 -->
    <package name="mes" namespace="/mes" extends="struts-default">
        <action name="getAllCarrys" class="com.rengu.actions.CarryAction" method="getAllCarrys"/>
        <action name="getAllCarrysByFirstResultAndMaxResults" class="com.rengu.actions.CarryAction"
                method="getAllCarrysByFirstResultAndMaxResults"/>
        <action name="getAllAssemblyCarrys" class="com.rengu.actions.AssemblyCarryInfoAction"
                method="getAllAssemblyCarrys"/>
        <action name="getAllAssemblyCarrysByFirstResultAndMaxResults" class="com.rengu.actions.AssemblyCarryInfoAction"
                method="getAllAssemblyCarrysByFirstResultAndMaxResults"/>
        <action name="getAllAssemblyCenters" class="com.rengu.actions.AssemblyCenterInfoAction"
                method="getAllAssemblyCenters"/>
        <action name="getAllAssemblyCentersByFirstResultAndMaxResults"
                class="com.rengu.actions.AssemblyCenterInfoAction"
                method="getAllAssemblyCentersByFirstResultAndMaxResults"/>
        <action name="getAllById" class="com.rengu.actions.DeportInfoAction" method="getAllById"/>
        <action name="getAllDeportInfo" class="com.rengu.actions.DeportInfoAction" method="getAllDeportInfo"/>
        <action name="getAllAGVInfo" class="com.rengu.actions.AGVInfoAction" method="getAllAGVInfo"/>
    </package>
</struts>
